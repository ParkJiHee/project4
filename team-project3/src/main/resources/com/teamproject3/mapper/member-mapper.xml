<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<!-- namespace : package-name.class-name -->
<mapper namespace="com.teamproject3.mapper.MemberMapper">
	
	<!-- SQL과 Object 매핑 -->
	<!-- 
		SQL    : #{ propertyName }, #{ propertyName } ... propertyName : 클래스.getPropertyName()
		Object : 클래스
	-->
	<!-- id : MethodName -->
	<!-- <insert id="insertMember" parameterType="com.demoweb.vo.Member"> -->
	
	<insert id="insertMember" parameterType="Member">
		INSERT INTO member (memberno, memname, memgender, memphone, membrith, memaddress, memroute, mememail, memvisitdate, centerno, age) 
		VALUES (member_sequence.nextval, #{ memName }, #{ memGender }, #{ memPhone }, #{ memBrith}, #{ memAddress}, #{ memRoute }, #{ memEail}, #{ memVisitDate }, #{ centerNo }, #{ age })
	</insert>
	
	
	
	 <resultMap type="Member" id="memberMap">
		<id column="memberno" property="memberNo" /> <!-- not null --> <!--조회 컬럼과 객체의 set메서드를 매핑-->
		<result column="memname" property="memName" /> <!-- not null -->
		<result column="memgender" property="memGender" /> <!-- not null -->
		<result column="memphone" property="memPhone" /> <!-- not null -->
		<result column="membrith" property="memBrith" />
		<result column="memaddress" property="memAddress" />
		<result column="memroute" property="memRoute" /> <!-- not null -->
		<result column="mememail" property="memEail" /> 
		<result column="memvisitdate" property="memVisitDate" /><!-- not null -->
		<result column="centerno" property="centerNo" />
		<result column="deleted" property="deleted" />
		<result column="age" property="age" />
	</resultMap>
	
	<!-- 
	parameter-type : hashmap => 2개 이상의 데이터를 vo 없이 사용하는 방법
	-->
	
	<!-- <select id="selectCenterByIdAndPasswd" parameterType="hashmap"
										   resultMap="memberMap">
		SELECT centerNo, cenid, cenphone
		FROM center
		WHERE cenid = #{ cenId } AND cenpasswd = #{ cenPasswd }
	</select> -->
	
	<select id="selectAllMembers" parameterType="int"
										   resultType="Member">
										   
		SELECT memberno, memname, memgender, memphone, 
		membrith, memaddress, memroute, mememail, memvisitdate, age
		FROM member
		WHERE centerno = #{ centerNo } ORDER BY memberno desc
		
	</select>

	<select id="selectMember" parameterType="int"
										   resultType="Member">
										   
		SELECT memberno, memname, memphone 
		FROM member
		WHERE memberno = #{ memberNo } ORDER BY memberno desc
		
	</select>
	
</mapper>













